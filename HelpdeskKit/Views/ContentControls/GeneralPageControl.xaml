<UserControl x:Class="HelpdeskKit.Views.ContentControls.GeneralPageControl"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:v="clr-namespace:HelpdeskKit.Views"
             mc:Ignorable="d"
             d:DesignHeight="310" d:DesignWidth="420"
             FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto">
    <Grid>
        <Grid.Resources>
            <v:ActiveBoolToStringConverter x:Key="ActiveBoolConverter" />
            <v:LockBoolToStringConverter x:Key="LockBoolConverter" />
            <Style TargetType="TextBlock" x:Key="TextBlockMargin">
                <Setter Property="Margin" Value="10,9,10,10" />
                <Setter Property="Foreground" Value="{StaticResource MaterialDesignTextBoxBorder}" />
            </Style>
            <SolidColorBrush x:Key="HighlightWarning" Color="#E65100" />
            <SolidColorBrush x:Key="HighlightOk" Color="#76FF03" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350*" />
            <ColumnDefinition Width="180*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*" />
            <RowDefinition Height="245*" />

        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    Grid.Row="0"
                    Grid.ColumnSpan="999"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="materialDesign:PackIcon" x:Key="SyncBorder">
                    <!--sync textbox borderbrush when it got mouse over -->
                    <Setter Property="Foreground" Value="{Binding ElementName=TextBoxSearchUser, Path=BorderBrush}" />
                    <Style.Triggers>
                        <!--sync textbox borderbrush when it got active -->
                        <DataTrigger Binding="{Binding IsSelectionActive, ElementName=NameTextBox}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <TextBox x:Name="TextBoxSearchUser"
                     Width="120"
                     Height="40"
                     materialDesign:HintAssist.Hint="Search"
                     materialDesign:HintAssist.HintOpacity="0.2"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding SearchAdCommand}"
                                CommandParameter="{Binding Text, ElementName=TextBoxSearchUser}"
                                Key="Enter" />
                </TextBox.InputBindings>
            </TextBox>
            <Button Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                    Background="{x:Null}"
                    BorderBrush="{x:Null}"
                    Width="20" Height="20"
                    Margin="0,15,0,0" Padding="0"
                    Command="{Binding SearchAdCommand}"
                    CommandParameter="{Binding Text, ElementName=TextBoxSearchUser}"
                    materialDesign:RippleAssist.IsCentered="True"
                    materialDesign:RippleAssist.Feedback="#FFCC80">
                <materialDesign:PackIcon Style="{StaticResource SyncBorder}" Kind="Magnify" Width="20" Height="20"
                                         Margin="0" />
            </Button>

            <RadioButton IsChecked="{Binding SearchByAd}" GroupName="SearchType" Width="50" Height="25"
                         Margin="25,20,0,0">
                <TextBlock Margin="0">AD</TextBlock>
            </RadioButton>
            <RadioButton GroupName="SearchType" Width="50" Height="25" Margin="5,20,0,0">
                <TextBlock Margin="0">HR</TextBlock>
            </RadioButton>
        </StackPanel>

        <materialDesign:Card x:Name="CardUserStats" Grid.Row="1" Grid.Column="0"
                             Margin="5"
                             Height="275"
                             materialDesign:ShadowAssist.ShadowDepth="Depth1">
            <Grid Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                  ScrollViewer.VerticalScrollBarVisibility="Disabled">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="2.5*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="materialDesign:PackIcon" x:Key="AlignWithTextBlock">
                        <Setter Property="Margin" Value="0,9,0,0" />
                        <Setter Property="Foreground" Value="{StaticResource MaterialDesignTextBoxBorder}" />
                    </Style>
                    <Style TargetType="StackPanel" x:Key="AlignWithTextBox">
                        <Setter Property="Orientation" Value="Horizontal" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Width" Value="120" />
                        <Setter Property="Height" Value="25" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed" />
                    </Style>
                </Grid.Resources>

                <StackPanel Grid.Row="0" Grid.Column="0" Style="{StaticResource AlignWithTextBox}">
                    <materialDesign:PackIcon Kind="Account" Style="{StaticResource AlignWithTextBlock}" />
                    <TextBlock Style="{StaticResource TextBlockMargin}">Username:</TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="0" Style="{StaticResource AlignWithTextBox}">
                    <materialDesign:PackIcon Name="ActiveIcon">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource AlignWithTextBlock}">
                                <!--default-->
                                <!--DataTrigger wont change Kind if explicitly get set in element-->
                                <Setter Property="Kind" Value="Check" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentUser.Active}" Value="True">
                                        <Setter Property="Kind" Value="Check" />
                                        <Setter Property="Foreground" Value="{StaticResource HighlightOk}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentUser.Active}" Value="False">
                                        <Setter Property="Kind" Value="WindowClose" />
                                        <Setter Property="Foreground" Value="{StaticResource HighlightWarning}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                    <TextBlock Name="TextBlockActiveStatus"
                               Style="{StaticResource TextBlockMargin}"
                               Foreground="{Binding Foreground, ElementName=ActiveIcon}">
                        Active:
                    </TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="0" Style="{StaticResource AlignWithTextBox}">
                    <materialDesign:PackIcon Name="LockIcon">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource AlignWithTextBlock}">
                                <!--default-->
                                <!--DataTrigger wont change Kind if explicitly get set in element-->
                                <Setter Property="Kind" Value="LockOpen" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentUser.Lock}" Value="False">
                                        <Setter Property="Kind" Value="LockOpen" />
                                        <Setter Property="Foreground" Value="{StaticResource HighlightOk}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentUser.Lock}" Value="True">
                                        <Setter Property="Kind" Value="Lock" />
                                        <Setter Property="Foreground" Value="{StaticResource HighlightWarning}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                    <TextBlock Style="{StaticResource TextBlockMargin}"
                               Foreground="{Binding Foreground, ElementName=LockIcon}">
                        Lock:
                    </TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="3" Grid.Column="0" Style="{StaticResource AlignWithTextBox}">
                    <materialDesign:PackIcon Name="ClockExpireIcon">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource AlignWithTextBlock}">
                                <!--default-->
                                <!--DataTrigger wont change Kind if explicitly get set in element-->
                                <Setter Property="Kind" Value="Clock" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentUser.IsExpired}" Value="False">
                                        <Setter Property="Kind" Value="Clock" />
                                        <Setter Property="Foreground" Value="{StaticResource HighlightOk}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentUser.IsExpired}" Value="True">
                                        <Setter Property="Kind" Value="ClockAlert" />
                                        <Setter Property="Foreground" Value="{StaticResource HighlightWarning}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                    <TextBlock Style="{StaticResource TextBlockMargin}"
                               Foreground="{Binding Foreground, ElementName=ClockExpireIcon}">
                        Expire:
                    </TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="4" Grid.Column="0" Style="{StaticResource AlignWithTextBox}">
                    <materialDesign:PackIcon Kind="Home" Style="{StaticResource AlignWithTextBlock}" />
                    <TextBlock Style="{StaticResource TextBlockMargin}">Batch:</TextBlock>
                </StackPanel>
                <StackPanel Grid.Row="5" Grid.Column="0" Style="{StaticResource AlignWithTextBox}">
                    <materialDesign:PackIcon Kind="NoteText" Style="{StaticResource AlignWithTextBlock}" />
                    <TextBlock Style="{StaticResource TextBlockMargin}">Desc:</TextBlock>
                </StackPanel>


                <TextBox Grid.Row="0" Grid.Column="1" IsReadOnly="True"
                         Text="{Binding CurrentUser.Ad, Mode=OneWay}" />
                <TextBox Grid.Row="1" Grid.Column="1" IsReadOnly="True"
                         Text="{Binding CurrentUser.Active, Mode=OneWay, Converter={StaticResource ActiveBoolConverter}}"
                         Foreground="{Binding Foreground, ElementName=ActiveIcon}"
                         BorderBrush="{Binding Foreground, ElementName=ActiveIcon}" />
                <TextBox Grid.Row="2" Grid.Column="1" IsReadOnly="True"
                         Text="{Binding CurrentUser.Lock, Mode=OneWay, Converter={StaticResource LockBoolConverter}}"
                         Foreground="{Binding Foreground, ElementName=LockIcon}"
                         BorderBrush="{Binding Foreground, ElementName=LockIcon}" />
                <TextBox Grid.Row="3" Grid.Column="1" IsReadOnly="True"
                         Text="{Binding CurrentUser.ExpireDate, StringFormat=dd/MM/yyyy}"
                         Foreground="{Binding Foreground, ElementName=ClockExpireIcon}"
                         BorderBrush="{Binding Foreground, ElementName=ClockExpireIcon}" />
                <TextBox Grid.Row="4" Grid.Column="1" IsReadOnly="True"
                         Text="{Binding CurrentUser.Batch, Mode=OneWay}" />
                <TextBox Grid.Row="5" Grid.Column="1"
                         IsReadOnly="True"
                         TextWrapping="Wrap"
                         MaxHeight="70"
                         Height="70"
                         MaxWidth="120"
                         VerticalScrollBarVisibility="Auto"
                         AcceptsReturn="True"
                         TextAlignment="Left"
                         VerticalAlignment="Top"
                         Text="{Binding CurrentUser.Description, Mode=OneWay}" />


            </Grid>
        </materialDesign:Card>
        <materialDesign:Card x:Name="CardAction" Grid.Row="1" Grid.Column="1"
                             Margin="5"
                             Height="{Binding ElementName=CardUserStats,Path=Height}"
                             materialDesign:ShadowAssist.ShadowDepth="Depth1">
            <StackPanel Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                        <Setter Property="Width" Value="100" />
                        <Setter Property="Height" Value="25" />
                        <Setter Property="Margin" Value="5.5" />
                    </Style>
                </StackPanel.Resources>
                <Label>
                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding UnlockCommand}" CommandParameter="{Binding CurrentUser}">
                            Unlock
                        </Button>
                    </StackPanel>
                </Label>
                <Label>
                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding ChangePasswordCommand}" CommandParameter="{Binding CurrentUser}">
                            Password
                        </Button>
                    </StackPanel>
                </Label>
                <Label>
                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding ChangeBatchCommand}"  CommandParameter="{Binding CurrentUser}">
                            Batch
                        </Button>
                    </StackPanel>
                </Label>

                <Label>
                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding DisableCommand}"  CommandParameter="{Binding CurrentUser}">
                            Disable
                        </Button>
                    </StackPanel>
                </Label>


            </StackPanel>
        </materialDesign:Card>
    </Grid>
</UserControl>